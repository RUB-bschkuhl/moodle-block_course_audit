{"version":3,"file":"tour_creator.min.js","sources":["../src/tour_creator.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for handling tour creation via button click.\n *\n * @module     block_course_audit/tour_creator\n * @copyright  2024 Your Name <your.email@example.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/str', 'core/config'], function ($, Ajax, Notification, Str, Config) {\n    /**\n     * Initialize the module.\n     *\n     * @param {int} courseId The course ID\n     */\n    const init = function (courseId) {\n        addMiauSprite(); //For fun. Ggf ausklammern\n\n        // Add click handler to the audit-start button\n        $('#audit-start').on('click', function (e) {\n            e.preventDefault();\n\n            // Show loading indicator\n            const $button = $(this);\n            const originalText = $button.text();\n            $button.prop('disabled', true);\n\n            Str.get_string('creatingtour', 'block_course_audit').then(function (loadingText) {\n                $button.text(loadingText);\n\n                // Call AJAX to create the tour\n                return Ajax.call([{\n                    methodname: 'block_course_audit_create_tour',\n                    args: {\n                        courseid: courseId\n                    }\n                }])[0];\n            }).then(function (response) {\n                console.log('Tour created successfully:', response);\n\n                // Show success message briefly before reloading\n                return Str.get_string('toursuccess', 'block_course_audit');\n            }).then(function (successText) {\n                $button.text(successText);\n\n                // Reload the page after a short delay to start the tour\n                setTimeout(function () {\n                    window.location.reload();\n                }, 500);\n            }).catch(function (error) {\n                console.error('Error creating tour:', error);\n                Notification.exception(error);\n                $button.text(originalText);\n                $button.prop('disabled', false);\n            });\n        });\n    };\n\n    const moveBlockToSprite = function () {\n        var $original = $('#block-course-audit');\n        var $copy = $original.clone();\n        $original.hide();\n        $('#miau-speech-bubble').append($copy);\n    };\n\n\n    const addMiauSprite = function () {\n        const $speechBubble = $('<div>').attr({\n            'id': 'miau-speech-bubble',\n            'aria-hidden': 'true'\n        }).html(`<a href=\"` + Config.wwwroot + `/blocks/course_audit/wiki.php\" target=\"_blank\">\n            <span id=\"miau-title\">MIau.nrw</span></a>`);\n        $speechBubble.append(\n            $('<div>').attr({ 'id': 'miau-speech-bubble-inner' })\n        );\n\n        const $miauContainer = $('<div>').attr({\n            'id': 'miau-gif',\n            'aria-hidden': 'true',\n            'role': 'presentation',\n            'tabindex': '0'\n        });\n\n        const $bubbleContainer = $('<div>').attr({\n            'id': 'bubble-container',\n            'aria-hidden': 'true',\n            'role': 'presentation',\n        });\n\n        $bubbleContainer.append($speechBubble);\n        $('#page').append($miauContainer);\n        $miauContainer.click(function () {\n            if ($speechBubble.is(\":visible\")) {\n                $bubbleContainer.remove();\n            } else {\n                $miauContainer.append($bubbleContainer);\n                var $original = $('#block-course-audit');\n                var $copy = $original.clone();\n                $original.hide();\n                $('#miau-speech-bubble').append($copy);\n            }\n        });\n    };\n\n    return {\n        init: init\n    };\n});"],"names":["define","$","Ajax","Notification","Str","Config","addMiauSprite","$speechBubble","attr","html","wwwroot","append","$miauContainer","$bubbleContainer","click","is","remove","$original","$copy","clone","hide","init","courseId","on","e","preventDefault","$button","this","originalText","text","prop","get_string","then","loadingText","call","methodname","args","courseid","response","console","log","successText","setTimeout","window","location","reload","catch","error","exception"],"mappings":";;;;;;;AAuBAA,yCAAO,CAAC,SAAU,YAAa,oBAAqB,WAAY,gBAAgB,SAAUC,EAAGC,KAAMC,aAAcC,IAAKC,cAyD5GC,cAAgB,iBACZC,cAAgBN,EAAE,SAASO,KAAK,IAC5B,mCACS,SAChBC,KAAK,YAAcJ,OAAOK,kHAE7BH,cAAcI,OACVV,EAAE,SAASO,KAAK,IAAQ,oCAGtBI,eAAiBX,EAAE,SAASO,KAAK,IAC7B,yBACS,YACP,wBACI,MAGVK,iBAAmBZ,EAAE,SAASO,KAAK,IAC/B,iCACS,YACP,iBAGZK,iBAAiBF,OAAOJ,eACxBN,EAAE,SAASU,OAAOC,gBAClBA,eAAeE,OAAM,cACbP,cAAcQ,GAAG,YACjBF,iBAAiBG,aACd,CACHJ,eAAeD,OAAOE,sBAClBI,UAAYhB,EAAE,uBACdiB,MAAQD,UAAUE,QACtBF,UAAUG,OACVnB,EAAE,uBAAuBU,OAAOO,kBAKrC,CACHG,KA1FS,SAAUC,UACnBhB,gBAGAL,EAAE,gBAAgBsB,GAAG,SAAS,SAAUC,GACpCA,EAAEC,uBAGIC,QAAUzB,EAAE0B,MACZC,aAAeF,QAAQG,OAC7BH,QAAQI,KAAK,YAAY,GAEzB1B,IAAI2B,WAAW,eAAgB,sBAAsBC,MAAK,SAAUC,oBAChEP,QAAQG,KAAKI,aAGN/B,KAAKgC,KAAK,CAAC,CACdC,WAAY,iCACZC,KAAM,CACFC,SAAUf,aAEd,MACLU,MAAK,SAAUM,iBACdC,QAAQC,IAAI,6BAA8BF,UAGnClC,IAAI2B,WAAW,cAAe,yBACtCC,MAAK,SAAUS,aACdf,QAAQG,KAAKY,aAGbC,YAAW,WACPC,OAAOC,SAASC,WACjB,QACJC,OAAM,SAAUC,OACfR,QAAQQ,MAAM,uBAAwBA,OACtC5C,aAAa6C,UAAUD,OACvBrB,QAAQG,KAAKD,cACbF,QAAQI,KAAK,YAAY"}