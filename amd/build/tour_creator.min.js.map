{"version":3,"file":"tour_creator.min.js","sources":["../src/tour_creator.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for handling tour creation via button click.\n *\n * @module     block_course_audit/tour_creator\n * @copyright  2024 Your Name <your.email@example.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/str'], function($, Ajax, Notification, Str) {\n\n    /**\n     * Initialize the module.\n     *\n     * @param {int} courseId The course ID\n     */\n    const init = function(courseId) {\n        console.log('Tour creator module initialized for course:', courseId);\n\n        // Add click handler to the audit-start button\n        $('#audit-start').on('click', function(e) {\n            e.preventDefault();\n\n            // Show loading indicator\n            const $button = $(this);\n            const originalText = $button.text();\n            $button.prop('disabled', true);\n\n            Str.get_string('creatingtour', 'block_course_audit').then(function(loadingText) {\n                $button.text(loadingText);\n\n                // Call AJAX to create the tour\n                return Ajax.call([{\n                    methodname: 'block_course_audit_create_tour',\n                    args: {\n                        courseid: courseId\n                    }\n                }])[0];\n            }).then(function(response) {\n                console.log('Tour created successfully:', response);\n\n                // Show success message briefly before reloading\n                return Str.get_string('toursuccess', 'block_course_audit');\n            }).then(function(successText) {\n                $button.text(successText);\n\n                // Reload the page after a short delay to start the tour\n                setTimeout(function() {\n                    window.location.reload();\n                }, 500);\n            }).catch(function(error) {\n                console.error('Error creating tour:', error);\n                Notification.exception(error);\n                $button.text(originalText);\n                $button.prop('disabled', false);\n            });\n        });\n    };\n    return {\n        init: init\n    };\n});"],"names":["define","$","Ajax","Notification","Str","init","courseId","console","log","on","e","preventDefault","$button","this","originalText","text","prop","get_string","then","loadingText","call","methodname","args","courseid","response","successText","setTimeout","window","location","reload","catch","error","exception"],"mappings":";;;;;;;AAuBAA,yCAAO,CAAC,SAAU,YAAa,oBAAqB,aAAa,SAASC,EAAGC,KAAMC,aAAcC,WAiDtF,CACHC,KA3CS,SAASC,UAClBC,QAAQC,IAAI,8CAA+CF,UAG3DL,EAAE,gBAAgBQ,GAAG,SAAS,SAASC,GACnCA,EAAEC,uBAGIC,QAAUX,EAAEY,MACZC,aAAeF,QAAQG,OAC7BH,QAAQI,KAAK,YAAY,GAEzBZ,IAAIa,WAAW,eAAgB,sBAAsBC,MAAK,SAASC,oBAC/DP,QAAQG,KAAKI,aAGNjB,KAAKkB,KAAK,CAAC,CACdC,WAAY,iCACZC,KAAM,CACFC,SAAUjB,aAEd,MACLY,MAAK,SAASM,iBACbjB,QAAQC,IAAI,6BAA8BgB,UAGnCpB,IAAIa,WAAW,cAAe,yBACtCC,MAAK,SAASO,aACbb,QAAQG,KAAKU,aAGbC,YAAW,WACPC,OAAOC,SAASC,WACjB,QACJC,OAAM,SAASC,OACdxB,QAAQwB,MAAM,uBAAwBA,OACtC5B,aAAa6B,UAAUD,OACvBnB,QAAQG,KAAKD,cACbF,QAAQI,KAAK,YAAY"}