{"version":3,"file":"audit.min.js","sources":["../src/audit.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course audit module.\n *\n * @module     block_course_audit/audit\n * @copyright  2025 Bastian Schmidt-Kuhl <bastian.schmidt-kuhl@ruhr-uni-bochum.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/modal', 'core/modal_events', 'core/str', 'core/ajax', 'core/templates', 'core/notification'],\n    function ($, Modal, ModalEvents, Str, Ajax, Templates, Notification) {\n        let currentArrow = null; // Track active arrow\n        let currentHighlight = null;\n        let floatingAnalysisList = {}; // Track all floating analysis elements\n        let displayMode = 'block'; // Default display mode: 'block' or 'inline'\n        let loadedSectionData = {}; // Cache for section data\n\n        // Check if there's a stored preference for displayMode\n        if (window.localStorage) {\n            const storedMode = localStorage.getItem('block_course_audit_display_mode');\n            if (storedMode) {\n                displayMode = storedMode;\n            }\n        }\n\n        const updateSectionHighlight = function (sectionNumber) {\n            // Alte Hervorhebung entfernen\n            if (currentHighlight !== null) {\n                $(`#section-${currentHighlight}`).removeClass('block-course-audit-active-section');\n            }\n            // Neue Hervorhebung setzen\n            if ((sectionNumber || sectionNumber === 0) && $('#section-' + sectionNumber).length) {\n                currentHighlight = sectionNumber;\n                $(`#section-${sectionNumber}`).addClass('block-course-audit-active-section');\n            }\n        };\n\n        const highlightSection = function (sectionNumber) {\n            const targetSection = $('#section-' + sectionNumber);\n            if (currentArrow) {\n                currentArrow?.remove();\n                currentArrow = null;\n            }\n            if (!targetSection.length) { return; }\n            // Scroll to section with navbar offset\n            $('html, body').animate({\n                scrollTop: targetSection.offset().top - 100\n            }, 800);\n\n            // Add temporary highlight\n            targetSection.addClass('block-course-audit-highlight');\n            // Add arrow indicator\n            currentArrow = $(\n                '<div class=\"block-course-audit-arrow\">' +\n                '<i class=\"fa fa-arrow-right fa-2x text-muted\" aria-hidden=\"true\"></i>' +\n                '</div>'\n            );\n            $('body').append(currentArrow);\n            // Position arrow next to section\n            const updatePosition = () => {\n                const rect = targetSection[0].getBoundingClientRect();\n                currentArrow.css({\n                    left: rect.right + 10,\n                    top: rect.top + window.scrollY + (rect.height / 2) - 25\n                });\n            };\n            updatePosition();\n            // Cleanup after 5 seconds\n            setTimeout(() => {\n                targetSection.removeClass('block-course-audit-highlight');\n                currentArrow?.remove();\n                currentArrow = null;\n            }, 2000);\n        };\n\n        // Function to toggle display mode (block or inline)\n        const toggleDisplayMode = function () {\n            displayMode = displayMode === 'block' ? 'inline' : 'block';\n\n            // Save preference\n            if (window.localStorage) {\n                localStorage.setItem('block_course_audit_display_mode', displayMode);\n            }\n\n            // Update UI based on the current mode\n            if (displayMode === 'inline') {\n                $('#block-course-audit').addClass('d-none');\n                showAllFloatingAnalysis();\n            } else {\n                $('#block-course-audit').removeClass('d-none');\n                hideAllFloatingAnalysis();\n            }\n\n            // Update the toggle button text\n            updateModeToggleButton();\n        };\n\n        // Function to update the toggle button text\n        const updateModeToggleButton = function () {\n            const stringKey = displayMode === 'block' ? 'inline_mode' : 'block_mode';\n            Str.get_string(stringKey, 'block_course_audit').then(function (str) {\n                $('#block-course-audit-toggle-mode').text(str);\n                return;\n            }).catch(Notification.exception);\n        };\n\n        // Function to show floating analysis for a specific section\n        const showFloatingAnalysis = function (sectionNumber) {\n            if (sectionNumber === undefined || sectionNumber === null) {\n                return;\n            }\n\n            // If we've already loaded this section data, just show it\n            if (floatingAnalysisList[sectionNumber]) {\n                floatingAnalysisList[sectionNumber].removeClass('d-none');\n                return;\n            }\n\n            // Otherwise fetch the data from the server\n            const section = $('#section-' + sectionNumber);\n            if (!section.length) {\n                return;\n            }\n\n            const sectionId = section.data('sectionid');\n            if (!sectionId) {\n                return;\n            }\n            // Use AJAX to fetch section data\n            Ajax.call([{\n                methodname: 'block_course_audit_get_section_analysis',\n                args: { sectionid: sectionId },\n                done: function (data) {\n                    // Cache the data\n                    loadedSectionData[sectionNumber] = data;\n                    renderFloatingAnalysis(data);\n                },\n                fail: Notification.exception\n            }]);\n        };\n\n        // Function to render the floating analysis\n        const renderFloatingAnalysis = function (data) {\n            if (!data || !data.section_number) {\n                return;\n            }\n\n            const sectionNumber = data.section_number;\n            const section = $('#section-' + sectionNumber);\n\n            // If floating analysis already exists, just show it\n            if (floatingAnalysisList[sectionNumber]) {\n                floatingAnalysisList[sectionNumber].removeClass('d-none');\n                return;\n            }\n\n            // Render the template\n            Templates.render('block_course_audit/float/floating_analysis', data)\n                .then(function (html) {\n                    console.log(html);\n                    // Insert after the section\n                    section.after(html);\n\n                    // Store reference to the floating analysis\n                    floatingAnalysisList[sectionNumber] = $('#block-course-audit-floating-' + sectionNumber);\n\n                    // Setup event handlers\n                    initFloatingAnalysisHandlers(sectionNumber);\n\n                    return;\n                })\n                .catch(Notification.exception);\n        };\n\n        // Initialize event handlers for a floating analysis\n        const initFloatingAnalysisHandlers = function (sectionNumber) {\n            const floatingElement = floatingAnalysisList[sectionNumber];\n\n            // Toggle minimize/maximize\n            floatingElement.on('click', '.toggle-minimize', function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                const isMinimized = floatingElement.hasClass('minimized');\n                const iconElement = $(this).find('i');\n\n                if (isMinimized) {\n                    floatingElement.removeClass('minimized');\n                    iconElement.removeClass('fa-plus').addClass('fa-minus');\n                    Str.get_string('minimize', 'block_course_audit').then(function (str) {\n                        $(e.currentTarget).attr('title', str);\n                        return;\n                    }).catch(Notification.exception);\n                } else {\n                    floatingElement.addClass('minimized');\n                    iconElement.removeClass('fa-minus').addClass('fa-plus');\n                    Str.get_string('maximize', 'block_course_audit').then(function (str) {\n                        $(e.currentTarget).attr('title', str);\n                        return;\n                    }).catch(Notification.exception);\n                }\n            });\n\n            // Handle click on minimized element to maximize\n            floatingElement.on('click', function (e) {\n                if ($(e.target).closest('.toggle-minimize, .close-analysis').length) {\n                    return;\n                }\n\n                if (floatingElement.hasClass('minimized')) {\n                    floatingElement.removeClass('minimized');\n                    floatingElement.find('.toggle-minimize i')\n                        .removeClass('fa-plus')\n                        .addClass('fa-minus');\n\n                    Str.get_string('minimize', 'block_course_audit').then(function (str) {\n                        floatingElement.find('.toggle-minimize').attr('title', str);\n                        return;\n                    }).catch(Notification.exception);\n                }\n            });\n\n            // Close button\n            floatingElement.on('click', '.close-analysis', function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                floatingElement.addClass('d-none');\n            });\n        };\n\n        // Function to hide all floating analysis elements\n        const hideAllFloatingAnalysis = function () {\n            for (const sectionNumber in floatingAnalysisList) {\n                if (Object.prototype.hasOwnProperty.call(floatingAnalysisList, sectionNumber)) {\n                    floatingAnalysisList[sectionNumber].addClass('d-none');\n                }\n            }\n        };\n\n        // Function to show all floating analysis elements\n        const showAllFloatingAnalysis = function () {\n            // Get all visible course sections\n            $('.section.main').each(function () {\n                const sectionId = $(this).attr('id');\n                if (sectionId && sectionId.startsWith('section-')) {\n                    const sectionNumber = sectionId.replace('section-', '');\n                    console.log(sectionNumber);\n                    showFloatingAnalysis(sectionNumber);\n                }\n            });\n        };\n\n        return {\n            init: function () {\n                const container = $('#block-course-audit');\n                let currentPage = 1;\n                const totalPages = container.data('total-pages');\n\n                // Add toggle button to switch between block and inline modes\n                if (container.length) {\n                    const blockHeader = container.find('.card-header').first();\n                    Str.get_string('inline_mode', 'block_course_audit').then(function (str) {\n                        const toggleButton = $('<button/>', {\n                            id: 'block-course-audit-toggle-mode',\n                            class: 'btn btn-sm btn-outline-secondary ml-2',\n                            text: str,\n                            title: ''  // Set via Str.get_string below\n                        });\n\n                        blockHeader.append(toggleButton);\n\n                        // Add tooltip\n                        return Str.get_string('toggle_analysis_view', 'block_course_audit');\n                    }).then(function (str) {\n                        $('#block-course-audit-toggle-mode').attr('title', str);\n                        return;\n                    }).catch(Notification.exception);\n\n                    // Attach toggle mode event handler\n                    container.on('click', '#block-course-audit-toggle-mode', function (e) {\n                        e.preventDefault();\n                        toggleDisplayMode();\n                    });\n                }\n\n                // Initialize according to current display mode\n                if (displayMode === 'inline') {\n                    if (container.length) {\n                        container.addClass('d-none');\n                    }\n                    // Only load for section pages, not for disclaimer or summary\n                    if (currentPage > 1 && currentPage < totalPages) {\n                        showAllFloatingAnalysis();\n                    }\n                }\n\n                container.off('click.pagination').on('click.pagination', '.page-nav', function (e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    if ($(this).hasClass('disabled')) { return; }\n\n                    const direction = $(this).data('direction');\n                    const newPage = direction === 'next' ? Math.min(currentPage + 1, totalPages) : Math.max(currentPage - 1, 1);\n\n                    if (newPage !== currentPage) {\n                        if (currentArrow) {\n                            currentArrow?.remove();\n                            currentArrow = null;\n                        }\n\n                        // Hide any visible floating analysis\n                        if (displayMode === 'inline') {\n                            hideAllFloatingAnalysis();\n                        }\n\n                        // Update page visibility\n                        $(`#page-content-${currentPage}`).removeClass('d-block').addClass('d-none');\n                        $(`#page-content-${newPage}`).removeClass('d-none').addClass('d-block');\n                        $('#current-page').text(newPage);\n\n                        // Update button states\n                        $('[data-direction=\"prev\"]').prop('disabled', newPage <= 1);\n                        $('[data-direction=\"next\"]').prop('disabled', newPage >= totalPages);\n\n                        // Trigger highlight if it's a section page (not first or last page)\n                        const activePage = $(`#page-content-${newPage}`);\n                        const sectionNumber = activePage.data('section-number');\n\n                        if (sectionNumber || sectionNumber === 0) {\n                            highlightSection(sectionNumber);\n                            updateSectionHighlight(sectionNumber);\n\n                            // If in inline mode and it's a section page, show floating analysis\n                            if (displayMode === 'inline') {\n                                showFloatingAnalysis(sectionNumber);\n                            }\n                        }\n\n                        currentPage = newPage;\n                    }\n                });\n\n                $('[data-toggle=\"tooltip\"]').tooltip({\n                    container: 'body',\n                    boundary: 'viewport'\n                });\n            }\n        };\n    });"],"names":["define","$","Modal","ModalEvents","Str","Ajax","Templates","Notification","currentArrow","currentHighlight","floatingAnalysisList","displayMode","loadedSectionData","window","localStorage","storedMode","getItem","updateModeToggleButton","stringKey","get_string","then","str","text","catch","exception","showFloatingAnalysis","sectionNumber","removeClass","section","length","sectionId","data","call","methodname","args","sectionid","done","renderFloatingAnalysis","fail","section_number","render","html","console","log","after","initFloatingAnalysisHandlers","floatingElement","on","e","preventDefault","stopPropagation","isMinimized","hasClass","iconElement","this","find","addClass","currentTarget","attr","target","closest","hideAllFloatingAnalysis","Object","prototype","hasOwnProperty","showAllFloatingAnalysis","each","startsWith","replace","init","container","currentPage","totalPages","blockHeader","first","toggleButton","id","class","title","append","setItem","off","newPage","Math","min","max","remove","prop","targetSection","animate","scrollTop","offset","top","rect","getBoundingClientRect","css","left","right","scrollY","height","updatePosition","setTimeout","highlightSection","updateSectionHighlight","tooltip","boundary"],"mappings":";;;;;;;AAsBAA,kCAAO,CAAC,SAAU,aAAc,oBAAqB,WAAY,YAAa,iBAAkB,sBAC5F,SAAUC,EAAGC,MAAOC,YAAaC,IAAKC,KAAMC,UAAWC,kBAC/CC,aAAe,KACfC,iBAAmB,KACnBC,qBAAuB,GACvBC,YAAc,QACdC,kBAAoB,MAGpBC,OAAOC,aAAc,OACfC,WAAaD,aAAaE,QAAQ,mCACpCD,aACAJ,YAAcI,kBA6EhBE,uBAAyB,iBACrBC,UAA4B,UAAhBP,YAA0B,cAAgB,aAC5DP,IAAIe,WAAWD,UAAW,sBAAsBE,MAAK,SAAUC,KAC3DpB,EAAE,mCAAmCqB,KAAKD,QAE3CE,MAAMhB,aAAaiB,YAIpBC,qBAAuB,SAAUC,kBAC/BA,MAAAA,wBAKAhB,qBAAqBgB,2BACrBhB,qBAAqBgB,eAAeC,YAAY,gBAK9CC,QAAU3B,EAAE,YAAcyB,mBAC3BE,QAAQC,oBAIPC,UAAYF,QAAQG,KAAK,aAC1BD,WAILzB,KAAK2B,KAAK,CAAC,CACPC,WAAY,0CACZC,KAAM,CAAEC,UAAWL,WACnBM,KAAM,SAAUL,MAEZnB,kBAAkBc,eAAiBK,KACnCM,uBAAuBN,OAE3BO,KAAM/B,aAAaiB,cAKrBa,uBAAyB,SAAUN,UAChCA,OAASA,KAAKQ,4BAIbb,cAAgBK,KAAKQ,eACrBX,QAAU3B,EAAE,YAAcyB,eAG5BhB,qBAAqBgB,eACrBhB,qBAAqBgB,eAAeC,YAAY,UAKpDrB,UAAUkC,OAAO,6CAA8CT,MAC1DX,MAAK,SAAUqB,MACZC,QAAQC,IAAIF,MAEZb,QAAQgB,MAAMH,MAGd/B,qBAAqBgB,eAAiBzB,EAAE,gCAAkCyB,eAG1EmB,6BAA6BnB,kBAIhCH,MAAMhB,aAAaiB,YAItBqB,6BAA+B,SAAUnB,qBACrCoB,gBAAkBpC,qBAAqBgB,eAG7CoB,gBAAgBC,GAAG,QAAS,oBAAoB,SAAUC,GACtDA,EAAEC,iBACFD,EAAEE,wBAEIC,YAAcL,gBAAgBM,SAAS,aACvCC,YAAcpD,EAAEqD,MAAMC,KAAK,KAE7BJ,aACAL,gBAAgBnB,YAAY,aAC5B0B,YAAY1B,YAAY,WAAW6B,SAAS,YAC5CpD,IAAIe,WAAW,WAAY,sBAAsBC,MAAK,SAAUC,KAC5DpB,EAAE+C,EAAES,eAAeC,KAAK,QAASrC,QAElCE,MAAMhB,aAAaiB,aAEtBsB,gBAAgBU,SAAS,aACzBH,YAAY1B,YAAY,YAAY6B,SAAS,WAC7CpD,IAAIe,WAAW,WAAY,sBAAsBC,MAAK,SAAUC,KAC5DpB,EAAE+C,EAAES,eAAeC,KAAK,QAASrC,QAElCE,MAAMhB,aAAaiB,eAK9BsB,gBAAgBC,GAAG,SAAS,SAAUC,GAC9B/C,EAAE+C,EAAEW,QAAQC,QAAQ,qCAAqC/B,QAIzDiB,gBAAgBM,SAAS,eACzBN,gBAAgBnB,YAAY,aAC5BmB,gBAAgBS,KAAK,sBAChB5B,YAAY,WACZ6B,SAAS,YAEdpD,IAAIe,WAAW,WAAY,sBAAsBC,MAAK,SAAUC,KAC5DyB,gBAAgBS,KAAK,oBAAoBG,KAAK,QAASrC,QAExDE,MAAMhB,aAAaiB,eAK9BsB,gBAAgBC,GAAG,QAAS,mBAAmB,SAAUC,GACrDA,EAAEC,iBACFD,EAAEE,kBAEFJ,gBAAgBU,SAAS,cAK3BK,wBAA0B,eACvB,MAAMnC,iBAAiBhB,qBACpBoD,OAAOC,UAAUC,eAAehC,KAAKtB,qBAAsBgB,gBAC3DhB,qBAAqBgB,eAAe8B,SAAS,WAMnDS,wBAA0B,WAE5BhE,EAAE,iBAAiBiE,MAAK,iBACdpC,UAAY7B,EAAEqD,MAAMI,KAAK,SAC3B5B,WAAaA,UAAUqC,WAAW,YAAa,OACzCzC,cAAgBI,UAAUsC,QAAQ,WAAY,IACpD1B,QAAQC,IAAIjB,eACZD,qBAAqBC,0BAK1B,CACH2C,KAAM,iBACIC,UAAYrE,EAAE,2BAChBsE,YAAc,QACZC,WAAaF,UAAUvC,KAAK,kBAG9BuC,UAAUzC,OAAQ,OACZ4C,YAAcH,UAAUf,KAAK,gBAAgBmB,QACnDtE,IAAIe,WAAW,cAAe,sBAAsBC,MAAK,SAAUC,WACzDsD,aAAe1E,EAAE,YAAa,CAChC2E,GAAI,iCACJC,MAAO,wCACPvD,KAAMD,IACNyD,MAAO,YAGXL,YAAYM,OAAOJ,cAGZvE,IAAIe,WAAW,uBAAwB,yBAC/CC,MAAK,SAAUC,KACdpB,EAAE,mCAAmCyD,KAAK,QAASrC,QAEpDE,MAAMhB,aAAaiB,WAGtB8C,UAAUvB,GAAG,QAAS,mCAAmC,SAAUC,GAC/DA,EAAEC,iBA5MdtC,YAA8B,UAAhBA,YAA0B,SAAW,QAG/CE,OAAOC,cACPA,aAAakE,QAAQ,kCAAmCrE,aAIxC,WAAhBA,aACAV,EAAE,uBAAuBuD,SAAS,UAClCS,4BAEAhE,EAAE,uBAAuB0B,YAAY,UACrCkC,2BAIJ5C,4BAiMwB,WAAhBN,cACI2D,UAAUzC,QACVyC,UAAUd,SAAS,UAGnBe,YAAc,GAAKA,YAAcC,YACjCP,2BAIRK,UAAUW,IAAI,oBAAoBlC,GAAG,mBAAoB,aAAa,SAAUC,MAC5EA,EAAEC,iBACFD,EAAEE,kBAEEjD,EAAEqD,MAAMF,SAAS,yBAGf8B,QAAwB,SADZjF,EAAEqD,MAAMvB,KAAK,aACQoD,KAAKC,IAAIb,YAAc,EAAGC,YAAcW,KAAKE,IAAId,YAAc,EAAG,MAErGW,UAAYX,YAAa,uBACrB/D,oCACAA,uDAAc8E,SACd9E,aAAe,KAIC,WAAhBG,aACAkD,0BAIJ5D,0BAAmBsE,cAAe5C,YAAY,WAAW6B,SAAS,UAClEvD,0BAAmBiF,UAAWvD,YAAY,UAAU6B,SAAS,WAC7DvD,EAAE,iBAAiBqB,KAAK4D,SAGxBjF,EAAE,2BAA2BsF,KAAK,WAAYL,SAAW,GACzDjF,EAAE,2BAA2BsF,KAAK,WAAYL,SAAWV,kBAInD9C,cADazB,0BAAmBiF,UACLnD,KAAK,mBAElCL,eAAmC,IAAlBA,kBArSZ,SAAUA,qBACzB8D,cAAgBvF,EAAE,YAAcyB,oCAClClB,qCACAA,qDAAc8E,SACd9E,aAAe,OAEdgF,cAAc3D,cAEnB5B,EAAE,cAAcwF,QAAQ,CACpBC,UAAWF,cAAcG,SAASC,IAAM,KACzC,KAGHJ,cAAchC,SAAS,gCAEvBhD,aAAeP,EACX,qHAIJA,EAAE,QAAQ8E,OAAOvE,cAEM,YACbqF,KAAOL,cAAc,GAAGM,wBAC9BtF,aAAauF,IAAI,CACbC,KAAMH,KAAKI,MAAQ,GACnBL,IAAKC,KAAKD,IAAM/E,OAAOqF,QAAWL,KAAKM,OAAS,EAAK,MAG7DC,GAEAC,YAAW,wBACPb,cAAc7D,YAAY,uDAC1BnB,uDAAc8E,SACd9E,aAAe,OAChB,KAmQa8F,CAAiB5E,eAlTN,SAAUA,eAEZ,OAArBjB,kBACAR,qBAAcQ,mBAAoBkB,YAAY,sCAG7CD,eAAmC,IAAlBA,gBAAwBzB,EAAE,YAAcyB,eAAeG,SACzEpB,iBAAmBiB,cACnBzB,qBAAcyB,gBAAiB8B,SAAS,sCA2S5B+C,CAAuB7E,eAGH,WAAhBf,aACAc,qBAAqBC,gBAI7B6C,YAAcW,YAItBjF,EAAE,2BAA2BuG,QAAQ,CACjClC,UAAW,OACXmC,SAAU"}